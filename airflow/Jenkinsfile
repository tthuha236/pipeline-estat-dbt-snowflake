def dagsChanged = false

pipeline {
    agent any
    environment {
        AIRFLOW_DNS = "ec2-54-168-48-161.ap-northeast-1.compute.amazonaws.com"
    }
    stages {
        stage('Checkout'){
            steps {
                checkout scm
            }
        }
        stage('Check for changes'){
            steps{
                script {
                    def changedFiles = sh(
                        script: "git diff-tree --no-commit-id --name-only -r HEAD",
                        returnStdout: true
                    ).trim()
                    if (!changedFiles.contains('airflow/config') && !changedFiles.contains('airflow/dags')){
                        echo "No changes in airflow dags. Skip task."
                        currentBuild.result = 'SUCCESS'
                        return
                    } else {
                        echo "There are changes in airflow dags, start cloning latest repo to airflow instance.."
                        dagsChanged = true 
                    }
                }
            }
        }
        stage('Clone to Airflow instance if changed'){
            when {
                expression { dagsChanged == true }
            }
            steps {
                sshagent(['jenkins-ec2-key']){
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@$AIRFLOW_DNS " \
                    sudo mkdir -p /opt/airflow_config && \
                    cp /opt/myproject/airflow/config/airflow.cfg /opt/airflow_config/ && \
                    sudo rm -rf /opt/myproject/* && \
                    cd /opt/myproject && \
                    sudo git clone https://github.com/tthuha236/pipeline-estat-dbt-snowflake.git . && \
                    cp /opt/airflow_config/airflow.cfg ./airflow/config/airflow.cfg
                    "
                    '''
                }
            }
        }
    }
}